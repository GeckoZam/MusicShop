---
- name: Instalar .NET Core 8 y configurar la aplicación de tienda de música
  hosts: 3.82.2.50
  connection: local
  become: yes
  tasks:
    - name: Actualizar el sistema
      apt:
        update_cache: yes
        upgrade: dist

    - name: Instalar dependencias necesarias
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Descargar el paquete de repositorio de Microsoft para Ubuntu 24.04 LTS
      command: wget https://packages.microsoft.com/config/ubuntu/24.04/packages-microsoft-prod.deb -O /tmp/packages-microsoft-prod.deb

    - name: Instalar el paquete de repositorio de Microsoft
      command: dpkg -i /tmp/packages-microsoft-prod.deb

    - name: Actualizar el caché de apt después de agregar el repositorio
      apt:
        update_cache: yes

    - name: Instalar .NET SDK
      apt:
        name: dotnet-sdk-8.0
        state: present

    - name: Crear directorio para la aplicación
      file:
        path: /home/ubuntu/music_store_app
        state: directory

    - name: Crear archivo del proyecto
      copy:
        dest: /home/ubuntu/music_store_app/music_store_app.csproj
        content: |
          <Project Sdk="Microsoft.NET.Sdk">

          <PropertyGroup>
              <OutputType>Exe</OutputType>
              <TargetFramework>net8.0</TargetFramework>
          </PropertyGroup>

          </Project>

    - name: Crear archivo de código fuente
      copy:
        dest: /home/ubuntu/music_store_app/Program.cs
        content: |
          using System;

          // Interfaz común para todos los instrumentos
          public interface IInstrument
          {
              void Play();
          }

          // Clases de instrumentos específicas que implementan la interfaz IInstrument
          public class Guitar : IInstrument
          {
              public void Play()
              {
                  Console.WriteLine("Playing a guitar.");
              }
          }

          public class Piano : IInstrument
          {
              public void Play()
              {
                  Console.WriteLine("Playing a piano.");
              }
          }

          // Clase Factory que devuelve instancias de IInstrument según el tipo
          public class InstrumentFactory
          {
              public IInstrument CreateInstrument(string instrumentType)
              {
                  if (instrumentType == "Guitar")
                  {
                      return new Guitar();
                  }
                  else if (instrumentType == "Piano")
                  {
                      return new Piano();
                  }
                  else
                  {
                      throw new ArgumentException("Instrument not available.");
                  }
              }
          }

          // Clase MusicStore que usa InstrumentFactory y aplica Inversión de Dependencias
          public class MusicStore
          {
              private readonly InstrumentFactory _instrumentFactory;

              // Constructor que recibe la fábrica como dependencia
              public MusicStore(InstrumentFactory instrumentFactory)
              {
                  _instrumentFactory = instrumentFactory;
              }

              public void PlayInstrument(string instrumentType)
              {
                  try
                  {
                      var instrument = _instrumentFactory.CreateInstrument(instrumentType);
                      instrument.Play();
                  }
                  catch (ArgumentException e)
                  {
                      Console.WriteLine(e.Message);
                  }
              }
          }

          // Ejemplo de uso
          public class Program
          {
              public static void Main()
              {
                  var factory = new InstrumentFactory();
                  var store = new MusicStore(factory);

                  store.PlayInstrument("Guitar");  // Output: Playing a guitar.
                  store.PlayInstrument("Piano");   // Output: Playing a piano.
                  store.PlayInstrument("Drums");   // Output: Instrument not available.
              }
          }

    - name: Construir la aplicación de tienda de música
      command: dotnet build /home/ubuntu/music_store_app/music_store_app.csproj
      args:
        chdir: /home/ubuntu/music_store_app

    - name: Ejecutar la aplicación
      command: dotnet run --project /home/ubuntu/music_store_app/music_store_app.csproj
      args:
        chdir: /home/ubuntu/music_store_app
      async: 10  # Ejecutar el comando de forma asíncrona
      poll: 0  # No esperar la finalización del comando
